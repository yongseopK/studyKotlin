package chap01

import kotlin.reflect.typeOf

fun main() {

    // Char 타입은 유니코드 한 글자를 표현하며 16비트이다
    // 이 타입의 리터럴은 작음따옴표 사이에 문자를 넣으면 된다.
    val z = 'z'
    val alpha = 'α'

    // 특수문자

    // 특수문자를 위해 이스케이프를 제공한다.
    /*
        \t : 탭
        \b : 백스페이스
        \n : 새 줄
        \r : 캐리지 리턴
        \' : 작은 따옴표
        \" : 큰 따옴표
        \\ : 역슬래시
        \$ : 달러표시
     */

    // 유니코드 문자

    // \u 다음에 네자리 16진수를 넣는 시퀀스로
    // 임의의 유니코드 문자를 문자 리터럴에 넣을 수 있다.
    val pi = '\u03C0' // π

    // Char 연산

    // Char 자체를 수타입으로 취급하지 않지만,
    // 유니코트 문자 집합 내에서 몇가지 산술 연산을 허용한다.
        // +/- 연산자로 문자에 수를 더하거나 뺄수 있다.
            // 더하거나 뺀 만큼 코드 포인트가 이동한 새 문자를 반환한다.
        // 두 문자로 뺄셈을 하면 두 문자의 코드 포인트간 거리를 얻을 수 있다.
        // 문자를 ++ 또는 --로 증가, 감소 시킬 수 있다.
    var a = 'a'
    var h = 'h'

    println(a + 5) // f
    println(a - 5) // \
    println(h - a) // 7
    println(-- h ) // g
    println(++ a ) // b

}